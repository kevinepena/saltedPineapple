# import * from './generated/prisma.graphql'
type SuccessMessage {
    message: String
}

type Mutation {
    createItem(title: String, description:String, price: Int, images: [String]!, largeImages: [String]!, category: [String]): Item!
    updateItem(id: ID!, title: String, description: String, price: Int): Item!
    deleteItem(id: ID!): Item
    signup(email: String!, password: String!, name: String!): User!
    signin(email: String!, password: String!): User!
    signout: SuccessMessage
    requestReset(email: String!): SuccessMessage
    resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
    updatePermissions(permissions: [Permission], userId: ID!): User
    addToCart(id: ID!): CartItem
    removeFromCart(id: ID!): CartItem
    createOrder(token: String!): Order!
    createCategory(name: String): Category!
    updateCategory(id: ID!): Category!
}

type Query {
    items(where: ItemWhereInput, first: Int, skip: Int, orderBy: ItemOrderByInput ): [Item]!
    item(where: ItemWhereUniqueInput!): Item
    itemsConnection(where: ItemWhereInput): ItemConnection!
    me: User
    categories(where: CategoryWhereInput, first: Int, skip: Int, orderBy: CategoryOrderByInput ): [Category]!
    category(where: CategoryWhereUniqueInput!): Category
    users: [User]!
    order(id: ID!): Order!
    orders(where: OrderWhereInput, orderBy: OrderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int):[Order]!
}

type User{
    id: ID!
    name: String!
    email: String!
    permissions: [Permission!]!
    cart: [CartItem!]!
    orders: [OrderItem]
}